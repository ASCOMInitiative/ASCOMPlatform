<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- #BeginTemplate "/Templates/Fixed_Fluid.dwt" --><!-- DW6 -->
 
<head>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="expires" content="Fri, 1 Jan 1990 00:00:00 GMT">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache, no-store, must-revalidate">

<!-- #BeginEditable "Title" -->
<title>Projects in Progress</title><!-- #EndEditable -->

<link rel="stylesheet" type="text/css" href="../Styles/Fixed_Fluid.css" />

<script type="text/javascript" language="javascript" src="../jscripts/Navigation.js"></script>

</head>
 
<body>

<div id="banner">
	<img style="position: absolute; top: 20px; left: 20px;" alt="ASCOM Standards for Astronomy" src="../Images/ASCOM-Logo.jpg" />
	
	<div id="breadcrumbs">
	<script type="text/javascript" language="javascript">
	<!-- 
	breadcrumbs(); 
	-->
	</script>
</div>

	<div class="topmenucontainer">
    <script type="text/javascript" language="javascript">
      <!-- 
	        writemainmenu();
	        -->
    </script>
  </div>
</div>



<div id="leftcontent">


	<div class="LeftNav">
	<div class="center"><div class="north"><div class="south">
	<script type="text/javascript" language="javascript">
	<!-- 
	writesubmenu(); 
	-->
	</script>
	
	</div></div></div></div>

	<!-- #BeginEditable "LeftNav" -->	<!-- #EndEditable --></div>
<div id="centercontent">
	<!-- #BeginEditable "MainContent" -->
	<div class="article">
		<!--<h3>Project: ASCOM Video (started April 2012, status: nearing completion, inclusion in Platform 6.1)</h3>
		<p>The new ASCOM interface for video is now available for both video hardware vendors and client software vendors. This provisional standard is currently under development and thus is subject to evolutionary change. The standard can be installed as an SDK that contains the COM interfaces, an IVideo simulator and a client video software with source code in C# .NET. More information about the project can be found on the <a href="http://www.hristopavlov.net/ASCOM/" target="_blank">ASCOM Provisional Video Standard project page.</a> </p>
		
		<h4>How to install ASCOM Provisional Video SDK</h4>
		<p>The installer is available from the project home page. Just download the ASCOM Provisional Video SDK installer via the link below, then run the it.</p>
		<pre style="font-size: larger; text-align: center;"><a href="http://www.hristopavlov.net/ASCOM/ASCOMProvisionalVideoSDK.exe">http://www.hristopavlov.net/ASCOM/ASCOMProvisionalVideoSDK.exe</a></pre>-->
	<h3>July 2019 update</h3>
	<p>With the introduction of ASCOM Alpaca (see below) lots of new things have been happening within  ASCOM. From now on this page will list only current projects and their status.</p>
	<h3>ASCOM Alpaca - ASCOM is not just for Windows any more</h3>
	<p><img src="../Images/AlpacaLogo560.png" width="130" height="103" hspace="8" align="right" />
	The <a href="https://github.com/ASCOMInitiative/ASCOMRemote/releases" target="_new">introduction of ASCOM Remote</a> in 2018 began the process of extending the ASCOM ecosystem to include the internet, Linux, and MacOS, to include small embedded controllers like the Arduino and Raspberry Pi. As of early 2019, this effort has grown into a new wave of development, with several astronomy instrument vendors embracing the implementation of the ASCOM Interfaces as ReST resources, reachable over the internet. Now known as ASCOM Alpaca, the next steps are being taken. This effort is much farther along that you might imagine. If you are interested in learning more, visit the ASCOM Alpaca page:</p>
	<p align="center" style="font-size:large;"><a href="../Developer/Alpaca.htm">Learn More about ASCOM Alpaca</a></p>
		<h3>Alpaca Discovery Protocol</h3>
		
		<p>Alpaca currently requires supplying the IP address or domain name of a device in order to connect to it. This is a bit burdensome and crude, so we have a project underway to design a lightweight discovery mechanism to augment Alpaca. With the discovery mechanism, users will be able to select a device from a user-friendly list. The list will be dynamically created, no static setup will be needed. Each device will broadcast its identity and addressing info. </p>
		<p>One very tight constraint is that the protocol must be simple enough to implement in tiny dedicated processors with no Linux, etc. This rules out complex protocols such as MDNS. Also we decided that centralized hub-and-spoke architectures are also out (single point of failure). We have a team member working on this and he already has a working model implemented in some tiny processors and elsewhere. This should be ready in months not years, but no hard promises yet. It has to be heavily tested first. </p>
		<h3>ASCOM Camera Interface Update</h3>
		<p>With the recent rise of CMOS cameras and their unique capabilities and needs for routine usage, we are reviewing the ASCOM Camera interface for additions that may be needed to accommodate CMOS. We are soliciting input from camera manufacturers and application developers to make sure we address their routine usage needs while protecting the standard against needless complexity. It is a complex problem because the Camera area has been the slowest to adopt ASCOM standards, and ASCOM Camera drivers, if they exist, are not as reliable and robust as they should be. This project does not have a firm schedule yet, but it is near the top of the priority list. </p>
		<h3>ASCOM Rotator Interface Update</h3>
		<p>This is in its final stages. The primary motivation for this is feedback from rotator manufacturers indicating that a &quot;sync&quot; feature is needed so that the rotator angle can represent the Equatorial Position Angle (PA) rather than the raw mechanical rotator angle. Some applications are currently doing this internally, but each has their own idea of the offset. It is better if all applications that use the rotator can get the true PA without having to do their own plate solutions and PA determination. This change will add new functions to the interface while maintaining 100% backward compatibility for existing applications.</p>
		<h3>Updates to Deprecate Synchronous Operations</h3>
		<p>Early in ASCOM's history, the interfaces were designed with &quot;synchronous&quot; functions as a convenience. This means that calling a function, for example SlewToTarget(), would not return until the operation, the slew in this case, is complete. Thus a synchronous function call could take minutes before it returns. 20 years later, and with the Alpaca protocols rapidly gaining acceptance and usage, synchronous function calls present a real problem. Furthermore, there are some functions in the interfaces for which it is &quot;up in the air&quot; whether it must be asynchronous or not. </p>
		<p>For example, the Telescope.Park() function has a companion property Telescope.AtPark. Even so, some Telescope systems implement Park() as a synchronous operation where it could take minutes to return. We are currently studying various approaches to this problem, all of which will involve deprecating synchronous operations. It will take time, and it will have impact on applications which use synchronous calls, or depend on implicit synchronous behaviors (the latter is a bad idea today). This project is in the study phase.</p>
		<h3>Soliciting Developer Satisfaction Feedback</h3>
		<p>During May, June, and July (2019), we conducted surveys of application developers, and separately, device developers. The purpose of the surveys was to determine the level of satisfaction with the ASCOM standard interfaces and the ASCOM-provided support libraries and tools. The response was excellent compared to a typical survey response, showing that the developers want to be heard. We asked if the interfaces were sufficient to cover the routine (night-to-night) usages of the devices, and if there were things they would like to see added. One outcome was the Rotator Interface Update described above. But the vast majority of responses indicated that the interfaces meet the design objective of  providing the functions needed by applications for day to day use. </p>
		<!--<p>As background, Software Bisque has implemented a <a href="http://www.bisque.com/x2standard/" target="_blank">cross-platform plugin architecture called X2</a> that provides interfacing with astronomical devices from TheSky X Pro. The ASCOM X2 Integration project  developed generic X2 drivers that convert from X2 to ASCOM, allowing TheSky X to take advantage of the many existing ASCOM drivers. The new X2 drivers  replace the old <a href="../FAQs/TheSky.htm#teleapi">TeleAPI</a>, FocusAPI, and DomeAPI plugins that are legacy from TheSky 6. For info on how ASCOM and TheSky interoperate, see our FAQ <a href="../FAQs/TheSky.htm" target="_blank">Working WIth TheSky</a>. The X2 interfaces provide a <span class="underline">much richer</span> set of capabilities, allowing TheSky X to take advantage of more features of devices via their ASCOM drivers.  There are X2 to ASCOM plugins available . Thanks to Evan Warkentine for most of these plugins, and to Bob Denny for the original mount plugin. Over the first part of 2013, Software Bisque and Evan Warkentine teamed up to merge these plugins into TheSky X so they are now a standard part of TheSky X.  </p>-->
	</div>
	<!-- #EndEditable --></div>
<div id="footer">
	Copyright &copy; 1998-2019, The ASCOM Initiative. 
	All rights reserved. </div>

</body>

<!-- #EndTemplate --></html>
