To make a VB template for a driver of type xxx (assuming you have already made the C# template for this driver type!):

(1) Create a template from VBBase template

(2) Change the project name to VBxxxTemplate (DO NOT INCLUDE SPACES IN TEMPLATE NAME!)

(3) Add a reference to the ASCOM interface assembly

(4) Implement the interface in Driver.vb (copy the C# implementation and run through the C# to VB translator at http://kamalpatel.net/ConvertCSharp2VB.aspx)

(5) Move existing SetupDialog impementation into alphabetic order within the IXxxx Members region

(6) Replace in files "DeviceName" with $safeprojectname$ CURRENT PROJECT ONLY!!!

(7) Same replacement separately in ReadMe.htm

(8) Fix up the test script

(9) In AssemblyInfo.cs, replace GUIDSUBST with $guid1$

(10) In Driver.cs, replace GUISDSUBST with $guid2$

(11) Change throw statements generated by implement interface to use ASCOM not implemented exceptions

(11) Add //TODO comments on each implemented prop and meth

(12) Open the VBxxxTemplate.vbproj file in Notepad and fix up:

     <RootNamespace>ASCOM.$safeprojectname$</RootNamespace>
     <AssemblyName>ASCOM.$safeprojectname$.xxx</AssemblyName>   (xxx is driver type)

(13) Open SetupDialogForm.Designer.vb and fix up:

     Me.PictureBox1.Image = Global.ASCOM.$safeprojectname$.My.Resources.Resources.ASCOM

(14) Open MyProject\Settings.Designer.vb and fix up:

     Friend ReadOnly Property Settings() As Global.ASCOM.$safeprojectname$.My.MySettings
         Get
             Return Global.ASCOM.$safeprojectname$.My.MySettings.Default
         End Get
     End Property

(15) Open MyProject\Resources.Designer.vb and fix up:

     Dim temp As Global.System.Resources.ResourceManager = New Global.System.Resources.ResourceManager("ASCOM.$safeprojectname$.Resources", GetType(Resources).Assembly)


Now export this project as a template, then use it to make a final driver project. It must compile with no editing!