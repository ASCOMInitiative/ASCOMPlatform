<?xml version="1.0"?>
<doc>
<assembly>
<name>
ASCOM.IConform
</name>
</assembly>
<members>
<member name="P:ASCOM.Conform.IConform.ConformErrors">
	<summary>
 Error numbers returned for "Not Implemented", "Invalid Value" and "Not Set" error states.
 </summary>
	<value>Expected driver error numbers</value>
	<returns>Expected driver error numbers</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.IConform.ConformCommands">
	<summary>
 Commands to be sent with Raw parameter false
 </summary>
	<value>Set of commands to be sent</value>
	<returns>Set of commands to be sent</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.IConform.ConformCommandsRaw">
	<summary>
 Commands to be sent with Raw parameter true
 </summary>
	<value>Set of commands to be sent</value>
	<returns>Set of commands to be sent</returns>
	<remarks></remarks>
</member><member name="T:ASCOM.Conform.IConform">
	<summary>
 Driver interface to inform Conform of valid driver commands and returned error codes.
 </summary>
	<remarks></remarks>
</member><member name="T:ASCOM.Conform.IConformErrorNumbers">
	<summary>
 Interface for Conform error numbers class
 </summary>
	<remarks></remarks>
</member><member name="T:ASCOM.Conform.IConformCommandStrings">
	<summary>
 Interface for Conform CommandStrings class
 </summary>
	<remarks></remarks>
</member><member name="M:ASCOM.Conform.ConformErrorNumbers.#ctor">
	<summary>
 Creates a new instance of the error numbers class.
 </summary>
	<remarks></remarks>
</member><member name="M:ASCOM.Conform.ConformErrorNumbers.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Set not implemented, invalid value and value not set error codes in one call
 </summary>
	<param name="NotImplemented">Error number for not implemented exceptions</param>
	<param name="InvalidValue1">Error number for first invalid value exception</param>
	<param name="InvalidValue2">Error number for second invalid value exception</param>
	<param name="ValueNotSet">Error number for value not set exception</param>
	<remarks>Use this call if you have one "not implemented", up to two "invalid value" and one
 "value not set" error codes. If you have more than this number of distinct error numbers,
 use the other nethods in the class to set them.</remarks>
</member><member name="M:ASCOM.Conform.ConformErrorNumbers.#ctor(System.Int32[],System.Int32[],System.Int32[])">
	<summary>
 Set not implemented, invalid value and value not set error codes in one call
 </summary>
	<param name="NotImplemented">Array of "not implemented" error numbers</param>
	<param name="InvalidValue">Array of "invalid value" error numbers</param>
	<param name="ValueNotSet">Array of "value not set" error numbers</param>
	<remarks>Use this call to set any number of error codes in each category.</remarks>
</member><member name="P:ASCOM.Conform.ConformErrorNumbers.NotImplemented">
	<summary>
 Error code(s) returned for "Not Implemented" errors.
 </summary>
	<value>"Not implemented" error codes</value>
	<returns>Array of integer error numbers</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformErrorNumbers.InvalidValue">
	<summary>
 Error code(s) returned for "Invalid Value" errors.
 </summary>
	<value>"Invalid value" error codes</value>
	<returns>Array of integer error numbers</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformErrorNumbers.ValueNotSet">
	<summary>
 Error code(s) returned for "Value Not Set" errors.
 </summary>
	<value>"Value not set" error codes</value>
	<returns>Array of integer error numbers</returns>
	<remarks></remarks>
</member><member name="T:ASCOM.Conform.ConformErrorNumbers">
	<summary>
 Contains error numbers that the driver will return when expected invalid conditions occur. 
 </summary>
	<remarks></remarks>
</member><member name="M:ASCOM.Conform.ConformCommandStrings.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="CommandString"></param>
	<param name="ReturnString"></param>
	<param name="CommandBlind"></param>
	<param name="CommandBool"></param>
	<param name="ReturnBool">Expected boolean response from CommandBool command</param>
	<remarks>To suppress a Command XXX test, set the command and return values to Nothing (VB) 
 or null (C#). To accept any response to a command just set the return value to Nothing or null
 as appropriate.</remarks>
</member><member name="M:ASCOM.Conform.ConformCommandStrings.#ctor">
	<summary>
 Create a new CommandStrings object with all fields set to Nothing (VB) / null (C#), use 
 other properties to set commands and expected return values.
 </summary>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformCommandStrings.CommandString">
	<summary>
 Set the command to be sent by the Conform CommandString test
 </summary>
	<value>Device command</value>
	<returns>String device command</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformCommandStrings.ReturnString">
	<summary>
 Set the expected return value from the CommandString command
 </summary>
	<value>Device response</value>
	<returns>String device response</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformCommandStrings.CommandBlind">
	<summary>
 Set the command to be sent by the Conform CommandBlind test
 </summary>
	<value>Device command</value>
	<returns>String device command</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformCommandStrings.CommandBool">
	<summary>
 Set the command to be sent by the Conform CommandBool test
 </summary>
	<value>Device command</value>
	<returns>String device command</returns>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.ConformCommandStrings.ReturnBool">
	<summary>
 Set the expected return value from the CommandBool command
 </summary>
	<value>Device response</value>
	<returns>Boolean device response</returns>
	<remarks></remarks>
</member><member name="T:ASCOM.Conform.ConformCommandStrings">
	<summary>
 The device specific commands and expected responses to be used by Conform when testing the 
 CommandXXX commands.
 </summary>
	<remarks></remarks>
</member><member name="P:ASCOM.Conform.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:ASCOM.Conform.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:ASCOM.Conform.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>