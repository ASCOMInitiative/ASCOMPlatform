<html><head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document"><title>Proposed ASCOM Dome Class v0</title>

<meta name="Microsoft Theme" content="loosegst 011, default"></head>

<body background="Dome%20Class%20v0-7_files/lootextb.jpg" bgcolor="#ffffcc" text="#000000" link="#cc6633" vlink="#663399" alink="#999900"><!--mstheme--><font face="Comic Sans MS, Arial, Helvetica">

</font><p align="center"><font face="Comic Sans MS, Arial, Helvetica"><b><font size="5">Proposed ASCOM Dome Class v0.7 (as of
6/24/2003 9:30pm CDT)</font></b></font></p>
<p class="MsoNormal"><font face="Comic Sans MS, Arial, Helvetica">&nbsp;</font></p>

<p class="MsoNormal"><font face="Comic Sans MS, Arial, Helvetica"><b><span style="">ENUMERATION:</span></b></font></p>
<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Public
Enum ShutterState</font></span></p>
<blockquote>
<font face="Comic Sans MS, Arial, Helvetica">  </font><p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">shutterOpen = 0<br>
  shutterClosed = 1<br>
  shutterOpening = 2<br>
  shutterClosing = 3<br>
  shutterError=3</font></span></p>
</blockquote>
<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">End
Enum</font></span></p>
<p class="MsoNormal"><font face="Comic Sans MS, Arial, Helvetica">&nbsp;</font></p>

<p class="MsoNormal"><font face="Comic Sans MS, Arial, Helvetica"><b><span style="">PROPERTIES:</span></b></font></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Altitude
(read, Double)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Altitude</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns the dome altitude in degrees, Horizon zero and increasing
positive to 90 zenith. Exception only if no altitude control.&nbsp; If actual
dome altitude can not be read, then reports back the last slew position.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.AtHome
(read, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.AtHome</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if the dome is in the Home
position. Set only following a Dome.FindHome operation and reset with any
azimuth slew operation. Exception if not supported.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.AtPark
(read, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.AtPark</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if
the dome is in the programmed park position. Set only following a Dome.Park
operation and reset with any slew operation.&nbsp; Exception if not supported.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Azimuth
(read, Double)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Azimuth</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns the dome azimuth in degrees, North zero and increasing
clockwise (i.e. 90 East, 180 South, 270 West). Exception only if no azimuth
control.&nbsp; If actual dome azimuth can not be read, then reports back last
slew position.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanFindHome
(read, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanFindHome</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if driver can do a search for home position</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanPark
(read, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanPark</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if driver is capable of programmed parking via Park()
method.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanSetAltitude
(read, Boolean)&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanSetAltitude</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if driver is capable of setting dome altitude</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanSetAzimuth
(read, Boolean)&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanSetAzimuth</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if driver is capable of setting dome azimuth</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanSetPark
(read, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanSetPark</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Return true if driver can set the dome park position</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanSetShutter
(read, Boolean)&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanSetShutter</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if driver is capable of automatically operating
shutter.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CanSyncAzimuth
(read, Boolean)&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CanSyncAzimuth</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if driver is capable of </font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">synchronizing
the dome azimuth position using the Dome.SyncToAzimuth method.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Connected
(read-write, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Connected [= Boolean]</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Return true if driver has established communication to dome
control. Set to true to establish the link and set to false to terminate the
link. Exception if connect fails.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Description
(read, String)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Description</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">A long description of the dome hardware / software or whatever.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.DriverInfo
(read, String)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.DriverInfo</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Description and version information about this ASCOM dome driver.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.InterfaceVersion
(read, short)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.InterfaceVersion</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns 1 for this interface version</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Name
(read, String)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Name</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns a short name for the dome.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.ShutterStatus
as ShutterState</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">ShutterState = Dome.ShutterStatus</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><span style="font-size: 12pt; font-family: &quot;Comic Sans MS&quot;; color: black;"><font face="Comic Sans MS, Arial, Helvetica">Returns status of the dome shutter or roll-off roof.<span style="">&nbsp;
</span>The enumeration type ShutterState specifies "shutter" states,
shutterOpen, shutterClosed, shutterOpening, shutterClosing, shutterError.<span style="">&nbsp;&nbsp;&nbsp;</span></font></span>
<font face="Comic Sans MS, Arial, Helvetica">Exception only if no shutter control.&nbsp; If actual shutter status can not be
read, then reports back the last shutter state.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Slewing
(read, Boolean)</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Slewing</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Returns true if any part of the dome is currently moving.&nbsp; Returns false if
all dome components are steady.&nbsp; Exception if communications error.</font></span></p>

<p class="MsoNormal"><font face="Comic Sans MS, Arial, Helvetica">&nbsp;</font></p>

<p class="MsoNormal"><font face="Comic Sans MS, Arial, Helvetica"><b><span style="">METHODS:</span></b></font></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.AbortSlew</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.AbortSlew()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Immediately cancel current dome operation. Exception if
communications failure or command is known to have failed.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CloseShutter&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CloseShutter()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Close shutter or otherwise shield telescope from the sky.&nbsp;
Exception if not supported or communications failure.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CommandBlind&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.CommandBlind(command)</font></font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><font face="Comic Sans MS, Arial, Helvetica">Parameter:&nbsp; command as
String - The raw command string to be sent to the dome.<br>
Return: Does not return a value</font></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Send
a string command directly to the dome without expecting response data.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CommandBool&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier"><span style="">response</span></font><span style=""><font face="Courier"> = Dome.CommandBlind(command)</font></span></font></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><font face="Comic Sans MS, Arial, Helvetica">Parameter:&nbsp; command as
String - The raw command string to be sent to the dome.<br>
Return: response as Boolean - True if the response indicated true or success,
else false.</font></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Send
a string command directly to the dome, returning a true / false response.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.CommandString&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">response = Dome.CommandString(command)</font></font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><font face="Comic Sans MS, Arial, Helvetica">Parameter:&nbsp; command as
String - The raw command string to be sent to the dome.<br>
Return: response as String - The response data from the dome resulting from the
sent command.</font></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Send
a string command directly to the dome, returning the response string.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.FindHome</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.FindHome()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Start operation to search for the dome home position.&nbsp;After
Home position is established initializes Dome.Azimuth to the default value and
sets the Dome.AtHome flag. Exception if not supported or communications failure.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.OpenShutter&nbsp;</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"> <font face="Courier">Dome.OpenShutter()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Open
shutter or otherwise expose telescope to the sky.&nbsp; </font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">Exception if not supported or communications failure.</font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.Park</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.Park()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Rotate
dome in azimuth to park position. </font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">After assuming programmed park position, sets Dome.AtPark
flag.&nbsp; Exception if not supported or communications failure.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.SetPark</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.SetPark()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Set the current azimuth, altitude position of dome to be the park position.
Exception if communications failure.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.SetupDialog</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.SetupDialog()</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><font face="Comic Sans MS, Arial, Helvetica">Brings up a dialog box for the user
to enter in custom setup parameters, such as a COM port selection. If no dialog
is required or supported, the function returns immediately<span style="">.</span></font></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.SlewToAltitude</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.SlewToAltitude(double Alt)</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Slew
the dome to the altitude position given by the parameter. </font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">Exception if not supported, communications failure or can not reach
indicated altitude.</font></span></p>

<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.SlewToAzimuth</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.SlewToAzimuth(double Az)</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Slew
the dome to the azimuth position given by the parameter.&nbsp; </font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">Exception if not supported or communications failure.</font></span></p>
<p class="MsoNormal"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Dome.SyncToAzimuth</font></span></p>

<p class="MsoPlainText" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica"><font face="Courier">Dome.SyncToAzimuth(double Az)</font></font></span></p>

<p class="MsoNormal" style="margin-left: 0.5in;"><span style=""><font face="Comic Sans MS, Arial, Helvetica">Synchronize
the current position of the dome to the azimuth given by the parameter.&nbsp; </font></span><span style=""><font face="Comic Sans MS, Arial, Helvetica">Exception if not supported or communications failure.</font></span></p>

<!--mstheme--></body></html>