<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE>Untitled Document</TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 3.2  (Win32)">
	<META NAME="CREATED" CONTENT="0;0">
	<META NAME="CHANGEDBY" CONTENT="Chris Rowland">
	<META NAME="CHANGED" CONTENT="20110402;10111900">
	<META NAME="CHANGEDBY" CONTENT="Chris Rowland">
	<STYLE TYPE="text/css">
	<!--
		@page { margin: 2cm }
		P { font-family: "Verdana", "Arial", "Helvetica", sans-serif; font-weight: normal }
		TD P { font-family: "Verdana", "Arial", "Helvetica", sans-serif; font-weight: normal }
		H3 { font-family: "Arial", "Helvetica", sans-serif }
		H2 { font-family: "Arial", "Helvetica", sans-serif }
		H4 { font-family: "Arial", "Helvetica", sans-serif }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-GB" DIR="LTR">
<TABLE WIDTH=100% BORDER=0 CELLPADDING=4 CELLSPACING=0 STYLE="page-break-before: always">
	<TR>
		<TD>
			<H2>ASCOM Camera Driver (C#)</H2>
		</TD>
	</TR>
</TABLE>
<P><BR><BR>
</P>
<H4>You have just created the skeleton of an ASCOM Camera driver in
C#. It produces an in-process (assembly) based driver.</H4>
<P>Prior to developing your first driver, please familiarize yourself
with the <A HREF="http://ascom-standards.org/developer.html">developer
information we've provided</A> at the ASCOM Initiative web site
(internet required). 
</P>
<P>You must do the following in order to complete your
implementation:</P>
<OL>
	<LI><P STYLE="margin-bottom: 0cm"><FONT FACE="Lucida Console, Courier New, Courier, monospace"><SPAN STYLE="background: #ffff00">BUILDING!</SPAN></FONT>
	Right click on the project name and select the properties.<BR>In the
	Application tab change the assembly name to
	<FONT FACE="Lucida Console, Courier New, Courier, monospace"><SPAN STYLE="background: #ffff00">ASCOM.$safeprojectname$.Camera</SPAN></FONT>;
	and the default namespace to <FONT FACE="Lucida Console, Courier New, Courier, monospace"><SPAN STYLE="background: #ffff00">ASCOM.$safeprojectname$</SPAN></FONT>.
	This could not be automated in the template. <I>This may now be
	done.</I></P>
	<LI><P STYLE="margin-bottom: 0cm">Switch the Camera project to the
	Debug configuration and build the template now. It should build
	without errors. 
	</P>
	<LI><P STYLE="margin-bottom: 0cm">Double-click the <FONT FACE="Lucida Console, Courier New, Courier, monospace">Test.js</FONT>
	script for a quick check of your driver. It activates only the
	SetupDialog() method, so it will run after you build the template
	successfully, even if you haven't yet implemented any of the
	properties and methods. <I>This doesn't appear to work, an
	alternative is to create a separate camera test application in a
	separate project, this will be similar to the test.js script. Set
	this as startup and debug away.</I></P>
	<LI><P STYLE="margin-bottom: 0cm">Open the AssemblyInfo.cs and
	Driver.cs files, then show the Task List and select Comments. This
	will show you the places where you need to add or change things for
	your driver. Tasks include implementing the required properties and
	methods. See the ASCOM Camera spec. 
	</P>
	<LI><P>Customize the Setup Dialog (SetupDialogForm) to provide the
	settings and other controls for your driver. 
	</P>
</OL>
<H3>Notes:</H3>
<UL>
	<LI><P STYLE="margin-bottom: 0cm">Successfully building the driver,
	as well as using <FONT FACE="Lucida Console, Courier New, Courier, monospace">regasm</FONT>
	32 and 64 on the assembly, registers it for both COM and ASCOM (the
	Chooser). See the code in the ASCOM Registration region of
	Driver.cs. 
	</P>
	<LI><P STYLE="margin-bottom: 0cm">If the driver relies on a
	manufacturer supplied driver then this may only be available in one
	mode, 32 or 64 bits. In this case the driver can only work in that
	bitness and if you want to allow applications of the other bitness
	to use it you will need to implement the driver as a Local Server.</P>
	<LI><P STYLE="margin-bottom: 0cm">Doing a Clean for the project, as
	well doing a <FONT FACE="Lucida Console, Courier New, Courier, monospace">regasm
	-u</FONT> on the assembly, unregisters it for both COM and ASCOM
	(the Chooser). 
	</P>
	<LI><P>The project's Debug configuration is already configured
	(<A HREF="#footnote">note</A>) for driver debugging using the
	supplied Test.js script. Place a breakpoint in your driver class
	constructor, then start debugging (go, F5). Your breakpoint will be
	hit as soon as the test script creates an instance of your driver
	(after selecting it in the Chooser). You can now single step,
	examine variables, etc. Please review Test.js and feel free to make
	changes and additions to activate various parts of your driver
	during debugging. You can bypass the appearance of the Chooser by
	removing<BR><BR><FONT FACE="Lucida Console, Courier New, Courier, monospace">var
	F = new ActiveXObject(H.Choose(&quot;&quot;)); // Create instance of
	selected Driver </FONT><BR><BR>and substituting<BR><BR><FONT FACE="Lucida Console, Courier New, Courier, monospace">var
	F = new ActiveXObject(&quot;ASCOM.$safeprojectname$.Camera&quot;);<BR></FONT><BR>This
	is a great way to incrementally debug your driver's properties and
	methods. Create additional scripts in either JScript or VBScript. To
	change the script that is used to activate the driver during
	debugging, open Project Properties, Debug tab, and change the script
	name in the Command Line Arguments field. 
	</P>
</UL>
<P STYLE="margin-bottom: 0cm">(note) If you're running on Windows
2000, you'll have to change the path to cscript.exe in your project
properties, Debug tab, Start External Program. Change c:\windows\ to
c:\winnt\. This was unavoidable because VS.NET doesn't support
substitution macros in this field.</P>
<DIV ALIGN=RIGHT>
	<TABLE WIDTH=100% BORDER=0 CELLPADDING=4 CELLSPACING=0>
		<TR>
			<TD>
				<TABLE WIDTH=100% BORDER=0 CELLPADDING=4 CELLSPACING=0>
					<TR>
						<TD>
							<H3>ASCOM Initiative</H3>
						</TD>
						<TD>
							<P><IMG SRC="ASCOM.png" NAME="graphics1" ALIGN=BOTTOM WIDTH=48 HEIGHT=56 BORDER=0></P>
						</TD>
					</TR>
				</TABLE>
				<P><BR><BR>
				</P>
			</TD>
		</TR>
		<TR>
			<TD>
				<P>The ASCOM Initiative consists of a group of astronomy software
				developers and instrument vendors whose goals are to promote the
				driver/client model and scripting automation. 
				</P>
				<P>See the <A HREF="http://ascom-standards.org/" TARGET="browser">ASCOM
				web site</A> for more information. Please participate in the
				<A HREF="http://tech.groups.yahoo.com/group/ASCOM-Talk" TARGET="browser">ASCOM-Talk
				Yahoo Group</A>. 
				</P>
			</TD>
		</TR>
	</TABLE>
</DIV>
<P><BR><BR>
</P>
<P><BR><BR>
</P>
</BODY>
</HTML>