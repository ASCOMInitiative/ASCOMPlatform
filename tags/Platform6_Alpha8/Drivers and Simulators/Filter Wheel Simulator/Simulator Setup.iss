;
; Script generated by the ASCOM Driver Installer Script Generator 1.2.0.0
; Generated by Bob Denny on 12/2/2008 (UTC)
;
[Setup]
AppName=ASCOM Simulator FilterWheel Driver
AppVerName=ASCOM Simulator FilterWheel Driver 5.0.1
AppVersion=5.0.1
AppPublisher=Mark Crossley <public@wilmslowastro.com>
AppPublisherURL=mailto:public@wilmslowastro.com
AppSupportURL=http://tech.groups.yahoo.com/group/ASCOM-Talk/
AppUpdatesURL=http://ascom-standards.org/
MinVersion=0,5.0.2195sp4
DefaultDirName="{cf}\ASCOM\FilterWheel"
DisableDirPage=yes
DisableProgramGroupPage=yes
OutputDir="."
OutputBaseFilename="FilterWheelSimulator(5.0.1)Setup"
Compression=lzma
SolidCompression=yes
; Put there by Platform if Driver Installer Support selected
WizardImageFile="C:\Program Files\ASCOM\InstallGen\Resources\WizardImage.bmp"
LicenseFile="C:\Program Files\ASCOM\InstallGen\Resources\CreativeCommons.txt"
; {cf}\ASCOM\Uninstall\FilterWheel folder created by Platform, always
UninstallFilesDir="{cf}\ASCOM\Uninstall\FilterWheel\Simulator"

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Dirs]
Name: "{cf}\ASCOM\Uninstall\FilterWheel\Simulator"
; TODO: Add subfolders below {app} as needed (e.g. Name: "{app}\MyFolder")

;  Add an option to install the source files
[Tasks]
Name: source; Description: Install the Source files; Flags: unchecked

[Files]
Source: "FilterWheelSim.exe"; DestDir: "{app}" ;AfterInstall: RegASCOM()
; Require a read-me HTML to appear after installation, maybe driver's Help doc
;;;;Source: "ReadMe.txt"; DestDir: "{app}"; Flags: isreadme
; Optional source files (COM and .NET aware)
Source: "*"; Excludes: *.zip,*.exe,*.dll, \bin\*, \obj\*; DestDir: "{app}\Source\FilterWheel Simulator"; Tasks: source; Flags: recursesubdirs
; TODO: Add other files needed by your driver here (add subfolders above)

[Icons]
Name: "{commonprograms}\ASCOM Platform\Simulators\FilterWheel Simulator"; Filename: "{app}\FilterWheelSim.exe"

;Only if COM Local Server
[Run]
Filename: "{app}\FilterWheelSim.exe"; Parameters: "/regserver"

;Only if COM Local Server
[UninstallRun]
Filename: "{app}\FilterWheelSim.exe"; Parameters: "/unregserver"

;  DCOM setup for COM local Server, needed for TheSky
[Registry]
; TODO: If needed set this value to the FilterWheel CLSID of your driver (mind the leading/extra '{')
#define AppClsid "{{B282EA0B-8127-4825-B582-1F18107A3BA9}"

; set the DCOM access control for TheSky on the FilterWheel interface
Root: HKCR; Subkey: CLSID\{#AppClsid}; ValueType: string; ValueName: AppID; ValueData: {#AppClsid}
Root: HKCR; Subkey: AppId\{#AppClsid}; ValueType: string; ValueData: "ASCOM Simulator FilterWheel Driver"
Root: HKCR; Subkey: AppId\{#AppClsid}; ValueType: string; ValueName: AppID; ValueData: {#AppClsid}
Root: HKCR; Subkey: AppId\{#AppClsid}; ValueType: dword; ValueName: AuthenticationLevel; ValueData: 1
; set the DCOM key for the executable as a whole
Root: HKCR; Subkey: AppId\FilterWheelSim.exe; ValueType: string; ValueName: AppID; ValueData: {#AppClsid}
; CAUTION! DO NOT EDIT - DELETING ENTIRE APPID TREE WILL BREAK WINDOWS!
Root: HKCR; Subkey: AppId\{#AppClsid}; Flags: uninsdeletekey
Root: HKCR; Subkey: AppId\FilterWheelSim.exe; Flags: uninsdeletekey

[CODE]
//
// Before the installer UI appears, verify that the (prerequisite)
// ASCOM Platform 5.x is installed, including both Helper components.
// Helper is required for all typpes (COM and .NET)!
//
function InitializeSetup(): Boolean;
var
   H : Variant;
   H2 : Variant;
begin
   Result := FALSE;  // Assume failure
   try               // Will catch all errors including missing reg data
      H := CreateOLEObject('DriverHelper.Util');  // Assure both are available
      H2 := CreateOleObject('DriverHelper2.Util');
      if ((H2.PlatformVersion >= 5.0) and (H2.PlatformVersion < 6.0)) then
         Result := TRUE;
   except
   end;
   if(not Result) then
      MsgBox('The ASCOM Platform 5 is required for this driver.', mbInformation, MB_OK);
end;

//
// Register and unregister the driver with the Chooser
// We already know that the Helper is available
//
procedure RegASCOM();
var
   H: Variant;
begin
   H := CreateOleObject('DriverHelper.Profile');
   H.DeviceType := 'FilterWheel';
   H.Register('Simulator.FilterWheel', 'FilterWheel Simulator');
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
   H: Variant;
begin
   if CurUninstallStep = usUninstall then
   begin
     H := CreateOleObject('DriverHelper.Profile');
     H.DeviceType := 'FilterWheel';
     H.Unregister('Simulator.FilterWheel');
  end;
end;
