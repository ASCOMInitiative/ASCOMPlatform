Comment: ASCOM Platform 6 Developer Components Setup Project
Comment: Set Variable NATIVE_ENGINE to TRUE
Comment: Set Variable DELAYUNTIL_APPLYCHANGES to FALSE
Comment: Set Variable LOGGED to C:\ASCOMInstallLog.txt
Comment: Set Variable NATIVE_LOGGING to TRUE
 
[DEFINE REGION: Check Application Requirements]
[END REGION]
 
[DEFINE REGION: Check/Install Application Pre-Requisites]
 
[DEFINE REGION: Check Application Pre-Requisites]
Comment: Check setup pre-requisites
Set Variable PREREQ to FALSE
Set Variable PRELIST to 
[compiler if Variable BUILDMODE not Equals PATCH]
Comment: if Variable NEEDSUPGRADE Equals TRUE
Comment: Set Variable PREREQ to TRUE
Comment: Set Variable PRELIST to $PRELIST$$NEWLINE$The Developer Components will be updated
Comment: end
[compiler end]
[END REGION]
Comment: Check that Platform 6 is already installed
Set Variable PLATFORM6OK to FALSE
Comment: Get Installed State for {8961E141-B307-4882-ABAD-77A3E76A40C1} into Variable PLATFORM6OK
Read Registry Key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{8961E141-B307-4882-ABAD-77A3E76A40C1}\UninstallString into PLATFORM6OK
if Variable PLATFORM6OK Equals 
  if Variable MAINTENANCE Equals FALSE
    Comment: No Platform 6 and we are installing so we have a problem and must signal it
    Set Variable PREREQ to TRUE
    Set Variable PRELIST to $PRELIST$$NEWLINE$ASCOM Platform 6
  else
    Comment: No Platform 6 but we are already installed so allow this install to be maintained and uninstalled.
    Set Variable PLATFORM6OK to TRUE
  end
end
 
[DEFINE REGION: Install Application Pre-Requisites]
Comment: Install setup pre-requisites
if Variable PREREQ not Equals FALSE
  Display Dialog: prereq, wait for dialog to return (modal)
  if Variable WIZARD Equals CANCEL
    Terminate Installation
  end
  if Variable PLATFORM6OK Equals FALSE
    Terminate Installation
  end
  Comment: Display Dialog: progressprereq, use as progress dialog (non-modal)
  [compiler if Variable BUILDMODE not Equals PATCH]
  Comment: if Variable NEEDSUPGRADE Equals TRUE
  Comment: Set Variable REMOVEOLD to 
  Comment: Set Variable ERROROLD to 
  Comment: Install/Remove MSI Package $PRODUCTCODE$[REMOVE=ALL] (get result into variable REMOVEOLD)
  Comment: if Variable REMOVEOLD Equals ERROR
  Comment: MessageBox: $TITLE$ Setup, Unable to uninstall old version of $TITLE$. Please uninstall it yourself using Control Panel Add-Remove Programs before attempting to install this product.$NEWLINE$$NEWLINE$$ERROROLD$
  Comment: Terminate Installation
  Comment: end
  Comment: if Variable REMOVEOLD Equals REBOOT
  Comment: MessageBox: $TITLE$ Setup, Your computer needs to be restarted before $TITLE$ Setup can continue.$NEWLINE$$NEWLINE$Please save your work in all running programs and click OK to restart your computer. Setup will resume once your computer restarts.$NEWLINE$$NEWLINE$If you click CANCEL, setup will exit. You will have to run setup again at a later time to install $TITLE$.
  Comment: if Variable REBOOTNOW Equals OK
  Comment: Reboot Computer and Resume Setup
  Comment: else
  Comment: Terminate Installation
  Comment: end
  Comment: end
  Comment: Set Variable MAINTENANCE to FALSE
  Comment: end
  [compiler end]
  Comment: Hide Dialog
end
[END REGION]
 
[END REGION]
 
[DEFINE REGION: Define Setup Globals]
Comment: Define Setup Components
Define Component: Developer Components
Define Component: Developer Components\Visual Studio Driver Templates
Comment: Test whether VS is installed by seeing whether the >VSI extention is mapped to the content installer. If not then ignore!
Read Registry Key HKCR\.vsi\ into VSIENTRY
if Variable VSIENTRY Equals 
  Deselect Component: Developer Components\Visual Studio Driver Templates
end
 
Comment: Initialize Setup Globals
Get System Setting Windows NT Kernel (NT4, 2000, XP, 2003, Vista, 2008) into ISNT
Get Folder Location System->Program Files Directory into PROGRAMFILES
Get Common Folder Location System->Program Files Directory into COMMONFILES
Get Common Folder Location Start Menu->Programs Group into SHORTCUTFILESALL
Get Folder Location Start Menu->Programs Group into SHORTCUTFILES
if Variable SHORTCUTFILESALL Equals 
  Set Variable SHORTCUTFILESALL to $SHORTCUTFILES$
end
Get Folder Location System->Desktop Directory into DESKTOPDIR
Get Folder Location System->Windows Directory into WINDIR
Get Folder Location System->System Directory into WINSYSDIR
Get Folder Location Taskbar->Quick Launch Directory into QUICKLAUNCHDIR
Get Folder Location WWW->WWWRoot into WWWROOTDIR
Get Folder Location System->Profiles Directory into USERPROFILE
[END REGION]
 
[DEFINE REGION: Setup User Interview]
if Variable MAINTENANCE Equals TRUE
  GoTo Label: Maintenance
else
  [compiler if Variable BUILDMODE not Equals PATCH]
  Comment: First Time Install
  Set Variable TARGETDIR to $PROGRAMFILES$\ASCOM\Platform 6 Developer Components
  Set Variable STARTMENU to ASCOM Platform 6
  [compiler end]
end
 
label: Welcome Dialog
Display Dialog: welcome, wait for dialog to return (modal)
if Variable WIZARD Equals CANCEL
  GoTo Label: Main Install
end
[compiler if Variable BUILDMODE not Equals PATCH]
label: License Check
Comment: Display Dialog: licensecheck, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Welcome Dialog
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: ReadMe Information
Comment: Display Dialog: readme, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: License Check
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: User Registration
Comment: Display Dialog: registration, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: ReadMe Information
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Setup Type
Comment: Display Dialog: setuptype, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: User Registration
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Custom Setup
Display Dialog: componentstree, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Setup Type
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Destination Directory
Comment: Display Dialog: destination, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Custom Setup
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
label: Start Menu
Comment: Display Dialog: startmenu, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  GoTo Label: Destination Directory
else
  if Variable WIZARD Equals CANCEL
    GoTo Label: Main Install
  end
end
[compiler end]
label: Start Installation
Comment: Display Dialog: startinstallation, wait for dialog to return (modal)
if Variable WIZARD Equals BACK
  [compiler if Variable BUILDMODE not Equals PATCH]
  GoTo Label: Start Menu
  [compiler else]
  GoTo Label: Welcome Dialog
  [compiler end]
else
  GoTo Label: Main Install
end
 
label: Maintenance
Comment: Maintenance Install/Uninstall
wizard loop
Display Dialog: maintenance, wait for dialog to return (modal)
Display Dialog: componentstree (if variable MODIFY is TRUE), wait for dialog to return (modal)
Comment: Display Dialog: startinstallation, wait for dialog to return (modal)
end
Comment: MessageBox: Maint Exit, Repair: .$REPAIR$. Modify: .$MODIFY$. Remove: .$REMOVE$.
[END REGION]
 
[DEFINE REGION: Process (Un)Installation]
label: Main Install
Comment: Exit Setup if Wizard Loop cancelled
if Variable WIZARD Equals CANCEL
  Terminate Installation
end
Comment: Remove previous version (MSI install)
if Variable NEEDSUPGRADE Equals TRUE
  MessageBalloon: ASCOM Developer Tools Maintenance, Uninstalling previous Developer Tools version...
  Set Variable REMOVEOLD to 
  Set Variable ERROROLD to 
   
  Comment: Find location of our uninstaller and run it
  Set Variable UNINSTALLER to 
  Read Registry Key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{4A195DC6-7DF9-459E-8F93-60B61EB45288}\UninstallString into UNINSTALLER
  Run Program $UNINSTALLER$ /s MODIFY=FALSE REMOVE=TRUE UNINSTALL=YES (WAIT, get result into variable UNINSTALLCODE)
  if Variable REMOVEOLD Equals ERROR
    MessageBox: $TITLE$ Setup, Unable to uninstall old version of $TITLE$. Please uninstall it yourself using Control Panel Add-Remove Programs before attempting to install this product.$NEWLINE$$NEWLINE$$ERROROLD$
    Terminate Installation
  end
  if Variable REMOVEOLD Equals REBOOT
    MessageBox: $TITLE$ Setup, Your computer needs to be restarted before $TITLE$ Setup can continue.$NEWLINE$$NEWLINE$Please save your work in all running programs and click OK to restart your computer. Setup will resume once your computer restarts.$NEWLINE$$NEWLINE$If you click CANCEL, setup will exit. You will have to run setup again at a later time to install $TITLE$.
    if Variable REBOOTNOW Equals OK
      Reboot Computer and Resume Setup
    else
      Terminate Installation
    end
  end
  Set Variable MAINTENANCE to FALSE
  MessageBalloon: ASCOM DeveloperTools Maintenance, Installing new Developer Tools version
end
 
Comment: Prepare to install
Set Variable PROGRESSTEXT to Installing $TITLE$
Set Variable SUCCESS to 
Set Variable LASTERROR to 
if Variable ALLUSERS Equals TRUE
  Set Variable SHORTCUTFOLDER to $SHORTCUTFILESALL$\$STARTMENU$
else
  Set Variable SHORTCUTFOLDER to $SHORTCUTFILES$\$STARTMENU$
end
Display Dialog: progress, use as progress dialog (non-modal)
 
Comment: Modify Target System
[DEFINE REGION: Perform Uninstallation]
if Variable REMOVE Equals TRUE
  Comment: Uninstall product
  Comment: TO-DO: Insert any additional uninstall commands here
  Apply Uninstall (get result into variable SUCCESS)
  Set Variable PROGRESS to 100
else
  [END REGION]
  [DEFINE REGION: Perform First Time or Maintenance Installation]
  Comment: Install/Re-Install product
  [OFFLINE CONTENT]
  Set Variable PROGRESS to 30
  Get Component Developer Components Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    [DEFINE REGION: Visual Studio references]
    Install Files ..\..\..\..\ASCOM.Astrometry\ASCOM.Astrometry\bin\Release\ASCOM.Astrometry.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\ASCOM.Attributes\bin\Release\ASCOM.Attributes.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\ASCOM.Controls\ASCOM.Controls\bin\Release\ASCOM.Controls.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\ASCOM.DeviceInterface\bin\Release\ASCOM.DeviceInterfaces.dll to $TARGETDIR$\Components\Platform6
    Set Variable PROGRESS to 40
    Install Files ..\..\..\..\ASCOM.DriverAccess\bin\Release\ASCOM.DriverAccess.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\ASCOM.SettingsProvider\ASCOM.SettingsProvider\bin\Release\ASCOM.SettingsProvider.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\ASCOM.Internal.Extensions\bin\Release\ASCOM.Internal.Extensions.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\ASCOM.Utilities\ASCOM.Utilities\bin\Release\ASCOM.Utilities.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\Interfaces\ASCOMExceptions\bin\Release\ASCOM.Exceptions.dll to $TARGETDIR$\Components\Platform6
    Install Files ..\..\..\..\Releases\ASCOM 6\Platform\Files\Platform 5.5\ASCOM.Astrometry.dll to $TARGETDIR$\Components\Platform55\
    Install Files ..\..\..\..\Releases\ASCOM 6\Platform\Files\Platform 5.5\ASCOM.Attributes.dll to $TARGETDIR$\Components\Platform55\
    Install Files ..\..\..\..\Releases\ASCOM 6\Platform\Files\Platform 5.5\ASCOM.Exceptions.dll to $TARGETDIR$\Components\Platform55\
    Install Files ..\..\..\..\Releases\ASCOM 6\Platform\Files\Platform 5.5\ASCOM.Utilities.dll to $TARGETDIR$\Components\Platform55\
    Install Files ..\..\..\..\Releases\ASCOM 6\Platform\Files\ASCOM.DriverAccess.dll to $TARGETDIR$\Components\Platform55\
    Install Files ..\..\..\..\Releases\ASCOM 6\Platform\Files\ASCOM.Exceptions.dll to $TARGETDIR$\Components\Platform5
    Write Registry Key HKLM\SOFTWARE\Microsoft\.NETFramework\v2.0.50727\AssemblyFoldersEx\ASCOM Platform 6\, $TARGETDIR$\Components\Platform6
    Write Registry Key HKLM\SOFTWARE\Microsoft\.NETFramework\v2.0.50727\AssemblyFoldersEx\ASCOM Platform 5.5\, $TARGETDIR$\Components\Platform55
    Write Registry Key HKLM\SOFTWARE\Microsoft\.NETFramework\v2.0.50727\AssemblyFoldersEx\ASCOM Platform 5\, $TARGETDIR$\Components\Platform5
    [END REGION]
    Set Variable PROGRESS to 50
    [DEFINE REGION: Developer Documentation]
    Install Files ..\..\..\..\Help\Platform Supporting Documents\Platform Evolution.pdf to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Help\Platform Supporting Documents\Platform 6 Client-Driver Interaction V2.pdf to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Help\Platform Supporting Documents\Generating Multiple ASCOM Drivers.pdf to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Help\Platform Supporting Documents\Making a Local Server based Driver.pdf to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\NOVAS\NOVAS-3\NOVAS_C3.0_Guide.pdf to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\NOVAS\Algorithms.pdf to $TARGETDIR$\Developer Documentation
    Set Variable PROGRESS to 60
    Install Files ..\..\..\..\Doc\tip.gif to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Doc\Bug72T-sm.jpg to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Help\Script Help Files\Script56.chm to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Help\Script Help Files\wsh-56.chm to $TARGETDIR$\Developer Documentation
    Set Variable PROGRESS to 70
    Install Files ..\..\..\..\Help\Help\PlatformDeveloperHelp.chm to $TARGETDIR$\Developer Documentation
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Active Scripting Help to $TARGETDIR$\Developer Documentation\Script56.chm
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\ASCOM Developer Help to $TARGETDIR$\Developer Documentation\PlatformDeveloperHelp.chm
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Creating Driver Installers with Inno to $TARGETDIR$\Developer Documentation\DriverInstallers.html
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Fundamental Astrometry Theory Paper to $TARGETDIR$\Developer Documentation\Algorithms.pdf
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\How to create a local server  based driver to $TARGETDIR$\Developer Documentation\Making a Local Server based Driver.pdf
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\How to create multiple versions of a driver to $TARGETDIR$\Developer Documentation\Generating Multiple ASCOM Drivers.pdf
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\NOVAS 3 Users Guide to $TARGETDIR$\Developer Documentation\NOVAS_C3.0_Guide.pdf
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Platform Evolution to $TARGETDIR$\Developer Documentation\Platform Evolution.pdf
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Platform 6 Client-Driver Interaction V2 to $TARGETDIR$\Developer Documentation\Platform 6 Client-Driver Interaction V2.pdf
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Windows Scripting Host Help to $TARGETDIR$\Developer Documentation\wsh-56.chm
    [END REGION]
    [DEFINE REGION: Driver installer]
    Install Files ..\..\..\..\Doc\DriverInstallers.html to $TARGETDIR$\Developer Documentation
    Install Files ..\..\..\..\Driver Inst\InstallerGen\bin\Release\InstallerGen.exe to $TARGETDIR$\Installer Generator
    Install Files ..\..\..\..\Driver Inst\InstallerGen\bin\Release\InstallerGen.pdb to $TARGETDIR$\Installer Generator
    Install Files ..\..\..\..\Driver Inst\WinFormsExtras\bin\Release\Microsoft.Samples.WinForms.Extras.dll to $TARGETDIR$\Installer Generator
    Install Files ..\..\..\..\Driver Inst\WinFormsExtras\bin\Release\Microsoft.Samples.WinForms.Extras.pdb to $TARGETDIR$\Installer Generator
    Set Variable PROGRESS to 80
    Install Files ..\..\..\..\Driver Inst\InstallerGen\Template\TemplateSubstitutionParameters.txt to $TARGETDIR$\Installer Generator
    Install Files ..\..\..\..\Driver Inst\InstallerGen\License\CreativeCommons.txt to $TARGETDIR$\Installer Generator\Resources
    Install Files ..\..\..\..\Driver Inst\InstallerGen\Template\DriverInstallTemplate.iss to $TARGETDIR$\Installer Generator\Resources
    Install Files ..\..\..\..\Driver Inst\InstallerGen\Graphics\WizardImage.bmp to $TARGETDIR$\Installer Generator\Resources
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Tools\Driver Install Script Generator to $TARGETDIR$\Installer Generator\InstallerGen.exe
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Tools\Inno Installer Web Site to http://www.jrsoftware.org/isinfo.php
    [END REGION]
  end
  Set Variable PROGRESS to 90
  [DEFINE REGION: Visual Studio Driver Templates]
  Get Component Developer Components\Visual Studio Driver Templates Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Install Files ..\..\..\..\Doc\Templates.html to $TARGETDIR$\Developer Documentation
    Create Shortcut $SHORTCUTFILES$\ASCOM Platform 6\Developer Documentation\Visual Studio Templates Readme to $TARGETDIR$\Developer Documentation\Templates.html
    Install Files ..\..\..\..\DriverTemplates\ASCOM 6 Driver Templates.vsi to $TARGETDIR$\Templates
  end
  [END REGION]
  [DEFINE WEB MEDIA ASCOM Platform 6 Developer Components]
  if Variable SELECTED Equals TRUE
  end
  Comment: Remove previous message baloon
  [compiler if Variable BUILDMODE Equals PATCH]
  Apply Patch (get result into variable SUCCESS)
  [compiler else]
  if Variable ADVERTISE Equals TRUE
    Apply Advertised (get result into variable SUCCESS)
  else
    Create Folder $TARGETDIR$\Components\Platform5
    Apply Install (get result into variable SUCCESS)
  end
  [compiler end]
  MessageBalloon: , 
   
  Comment: Run the VsiInstaller to install the templates, provided that it is present on the system.
  Set Variable RC to 
  Get Component Developer Components\Visual Studio Driver Templates Selection State into Variable SELECTED
  if Variable SELECTED Equals TRUE
    Comment: Test whether VS is installed by seeing whether the >VSI extention is mapped to the content installer. If not then ignore!
    Read Registry Key HKCR\.vsi\ into VSIENTRY
    if Variable VSIENTRY not Equals 
      Comment: Erase existing templates to avoid confirmation dialogs in VSI installer
      Run Program $SUPPORTDIR$\EraseTemplates.exe  (WAIT, get result into variable RC)
      if Variable RC not Equals 0
        MessageBox: Profile Migration, An error has occured during pre-installation template removal. $NEWLINE$This is not a serious issue but you may now see some dialogs in the template $NEWLINE$installer requesting confirmation to delete older template files.$NEWLINE$$NEWLINE$Please report this on the ASCOM-Talk Yahoo group.
      end
      Run Program $TARGETDIR$\Templates\ASCOM 6 Driver Templates.vsi  (WAIT, get result into variable RC)
      if Variable RC not Equals 0
        MessageBox: VS Templates, The Visual Studio content installer indicated that it failed in some way: $NEWLINE$$NEWLINE$Return Code: $RC$$NEWLINE$$NEWLINE$Please report this on ASCOM-Talk.
      end
    else
      MessageBalloon: Driver Templates, Visual Studio content installer is not installed, driver templates are located in the $TARGETDIR$\Templates folder.
    end
  end
  Set Variable PROGRESS to 100
end
[END REGION]
[END REGION]
 
[DEFINE REGION: Finish Setup]
Comment: End of Installation
Hide Dialog
Comment: MessageBox: , Remove: $REMOVE$ Success: $SUCCESS$
Display Dialog: finish, wait for dialog to return (modal)
if Variable SILENT Equals FALSE
  if Variable REBOOTCOMPUTER Equals TRUE
    if Variable SUCCESS Equals REBOOT
      Reboot Computer
    end
  end
  if Variable RUNAPP Equals TRUE
    if Variable REMOVE Equals FALSE
      if Variable SUCCESS Equals COMPLETE
        Comment: TO-DO: Insert command that starts your application here
      end
    end
  end
end
[END REGION]
 
