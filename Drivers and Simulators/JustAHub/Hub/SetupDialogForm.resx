<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picASCOM.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAA4CAMAAACMj4vYAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFACFX
        ////anAhWmQpDCpRBCRV3eHp7e/zn6vAv8fVzdPe3+Pq3uLpASJYASJXAiNYAyRZAyNWBCRWBSVaBiZb
        BydcCChcCipeDSxgDi1gDy5hEC9iETBiEjFjEzJkFTNlFjRlGTdnHTpqHTpoHzxrID1sIz9uKERxKUVy
        LEd0LUh1MEt3MUx3M015NU96N1F7OVN9PVZ/QFmBRV2ER1+GSGCGS2KIUGeMVGqOWW6SXnOVYHWWYnaY
        an2dbH+ebYCfcIOhdYekeImmfo+qf5Crh5ewi5qzj521lKK5k6G4l6S6mKW7m6i9mqe8pLDDo6/Cr7nK
        sbvMyM/b0dfhz9XfytDa6OvwBydVCilYFjNdmaa6prLErbjJxMzY1Nrj8PL17/H06+3wCSlVCypTCylS
        DCtTDSpRRl5/qLTEDitQDy1SDyxPx87XES9RFTJRc4WaFTBMboCT7/Hz+Pn69vf4GTZQGTVOGzdOnqq0
        v8fNHTlNHzpMYnV/Y3V9JT9KJkBKKkNJLUZILkdH+fr6L0hHMUlGMkpGtb68NUxF5OfmPlRMOE9F7vDv
        OVBEO1FDPFJDPVNEP1VCQVZEWGpOS14+TWA9doVoUGM8wMe4UWM7U2U7VGY8WWo5Wms48vPwXW03XGw4
        Y3M2rbWWfopVangzaXcz5efd+/z38vPucn4wW2UpeoUudoIvh5FMfYctys6phI0qZ20jzNCo5ujQjZUn
        iZEpbHEga3Ahkpky5+nMnKEjmp8jl50jlJolcnUe8fLbrK4dp6oed3oasrQryMla2dqhxMIUvr0XubkY
        w8EatLUas7QaxcMer7Ab19d32dmC+/vu///2+/v2/f35///9+/v5///+5NwJ4doL39gL29QO1dAO0s0P
        y8cSx8QT19IY2NVB9vKN6+mS+vnW//IA/vEA++8B/fAC+u4C+e0C9usD9OkE8+gE8OYF7+UF7eMG6+IH
        6eAI594I9OkJ/fEO/PIc//Qs/fMy+fFB8Oty+fWV+ve5//zL+fjg//71+vr6VBWN3gAAAAd0SU1FB9cF
        Ew0MA3THfNMAAAQ3SURBVEhLnZYJdNRUFIbva4HOo4YEZzoF0ul0KoPLsDUyBBiWgIHIYhkhWrfW51IX
        BDdwQ1RwwX1BFgXrAm4o4FpERRAFKyIqbi3WFTuOFC0qbqhYPC+ZySSZpy3+Z07ufe/mO7kv+e85A6/n
        tE/PmloPay7s0C6dZei8JyHnTHCL9/n9XsG9a6hLLuR0cO1xvkCvSKRXwMe5ClQdGYC3pN+QUaOG9Cvx
        ugpUDIDr3md4eWVl+fA+3RmPYABCSJ5QRUjVBDnEOAYD8IZjxy7/qP74eCzM6IkBCKWDz/n7/ccPOnlw
        afuewAfKlv31atMVR5UF2gdAQc9N713+57JozwJXgYoF8Lf8uujITV8dUsi7ClQsAF5uPDEw/5e7bS+V
        43jOXLKAK79fyXEVjWutDU4oFIuLCr0UYQFP7b6UXn84P73hCx5WFpWOCPk5JlC9fR0NVzcvTW0Iwf5D
        R48bM0wKeZnAg8nrjbilzlxz/kOHHlNZNWniiN7dOBbwxRYzLknONQGxbHTlaTPyOh8dDfIMYN43C8yk
        uqHWiHzxgJMea62f3ql8UEhgAK99dnAqW71nCg1c0aKv92277tTJ4weWMIBrmh9Np3N21tBw69bf3r2x
        c6fJp4zs24NxhtqGaVa++U2AmzYk35ovjRhbPn5ktLQg+y3NbFmZWSz4buk7ibo7wB/qHR00sG8p9Yob
        WNFyWWYxe3fi03uMIe8WDJX0KKDecgFnfPKKlU97ZlfzT/SbU4QXBNOKLuD+5A2prOKRH5tX3L7roUzN
        lAuo22zGLosbE2tnmsd2ygZwHH/XtwuN9M66xNvX0qRm5xzH7TbAsPDGL0/gAGZvSHw+zyxP2bP63wBq
        4Vl7V4X8l6xLbK/pmq7XNlQ77rcAw8LP7bjg7FU/tzxxeqY+N3lfetYcgGHhqU3P3/vH7y9ac2M0unVj
        etacALXw8tZt+96YFbSPvi/48N6rUrPmAPjiAeOqPqj/8GbDwpaEYP+LdjydmjUHwBVJYyZdvD9l4bSM
        Rl9qOs6cNSdQePiwiZaFLYA2elvrA+asOQDwhmwWTstodEb9x+asOQGHhdMyGs2b7mg086VtFrYARqN2
        L1kWtsRo1OVWt7IbbQPIbrQNILvRNgG3LCBCNBo0gvJjABGMiEc0IopHAAhSAPLoxQI8BIUBYkgCDYXD
        RJdiBEOY6LKskzAghEFCSM0AIokRFUBBiggqaEQEkAloSKQlDZCORFW3AzEkevIBRIyQLgPGZsNmxBiQ
        hmRdswO6LilIpmdRMJKMG8UYYJ0COgak6h4k24AI0jEmcdAwgIhUhZ5HRaCgCK0pgFQNIdEGeAjQA4Rl
        pEoakkQ9X/UgDUSdaBrRRUCqjHSwAapCe8BhkOPYIwGIGsYxuqVgrIoAcTn1+38fLvsv3H+oay6sObfj
        AagiF9bnHpBe+AfufxxAkOg6AQAAAABJRU5ErkJggg==
</value>
  </data>
</root>