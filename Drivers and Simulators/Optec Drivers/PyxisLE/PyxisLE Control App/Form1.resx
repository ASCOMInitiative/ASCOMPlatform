<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FHoUZVp3AE8AAAAASUVORK5CYII=
</value>
  </data>
</root>