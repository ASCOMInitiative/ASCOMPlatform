<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ASCOM.SettingsProvider</name>
    </assembly>
    <members>
        <member name="T:ASCOM.DeviceIdAttribute">
            <summary>
            An attribute for specifying an associated ASCOM DeviceID.
            This is intended primarily for use with the <see cref="T:ASCOM.SettingsProvider"/> class.
            This attribute is placed on the driver's <c>Properties.Settings</c> class and
            informs the <see cref="T:ASCOM.SettingsProvider"/> which DeviceID to store settings under.
            </summary>
        </member>
        <member name="M:ASCOM.DeviceIdAttribute.#ctor(System.String)">
            <summary>
            Construct a DeviceIdAttribute from teh supplied string.
            </summary>
            <param name="deviceId">A string containing the ASCOM DeviceID to be referenced.</param>
        </member>
        <member name="P:ASCOM.DeviceIdAttribute.DeviceId">
            <summary>
            Gets the ASCOM DeviceID that the attribute is associated with.
            </summary>
        </member>
        <member name="T:TiGra.ExtensionMethods.StringExtensions">
            <summary>
            Extension methods for manipulating strings.
            </summary>
        </member>
        <member name="M:TiGra.ExtensionMethods.StringExtensions.Head(System.String,System.Int32)">
            <summary>
            Returns the specified number of characters from the head of a string.
            </summary>
            <param name="source">The source string.</param>
            <param name="length">The number of characters to be returned, must not be greater than the length of the string.</param>
            <returns>The specified number of characters from the head of the source string, as a new string.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the requested number of characters exceeds the string length.</exception>
        </member>
        <member name="M:TiGra.ExtensionMethods.StringExtensions.Tail(System.String,System.Int32)">
            <summary>
            Returns the specified number of characters from the tail of a string.
            </summary>
            <param name="source">The source string.</param>
            <param name="length">The number of characters to be returned, must not be greater than the length of the string.</param>
            <returns>The specified number of characters from the tail of the source string, as a new string.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the requested number of characters exceeds the string length.</exception>
        </member>
        <member name="M:TiGra.ExtensionMethods.StringExtensions.Clean(System.String,System.String)">
            <summary>
            Cleans (that is, removes all unwanted characters) from the string.
            </summary>
            <param name="source">The source string.</param>
            <param name="allowedCharacters">A list of the allowed characters. All other characters will be removed.</param>
            <returns>A new string with all of the unwanted characters deleted.</returns>
        </member>
        <member name="M:TiGra.ExtensionMethods.StringExtensions.RemoveHead(System.String,System.Int32)">
            <summary>
            Remove the head of the string, leaving the tail.
            </summary>
            <param name="source">The source string.</param>
            <param name="length">Number of characters to remove from the head.</param>
            <returns>A new string containing the old string with <see cref="P:length"/> characters removed from the head.</returns>
        </member>
        <member name="M:TiGra.ExtensionMethods.StringExtensions.RemoveTail(System.String,System.Int32)">
            <summary>
            Remove the tail of the string, leaving the head.
            </summary>
            <param name="source">The source string.</param>
            <param name="length">Number of characters to remove from the tail.</param>
            <returns>A new string containing the old string with <see cref="P:length"/> characters removed from the tail.</returns>
        </member>
        <member name="T:TiGra.Diagnostics">
            <summary>
            The Diagnostics class provides a few helper methods that make it easier to produce coherent
            debugging output. The class is implemented as a singleton that is created as soon as the assembly
            is loaded. The level of trace output that is produced is controlled by a <see cref="T:System.Diagnostics.TraceSwitch"/>
            that in turn loads its configuration from the App.config file. If there is no App.Config file,
            the default is to produce verbose output for debug builds and errors/warnings for release builds.
            <para>
            We recommend SysInternals DbgView for viewing and capturing the trace output.
            See http://www.sysinternals.com
            </para>
            </summary>
        </member>
        <member name="F:TiGra.Diagnostics.TraceLevels">
            <summary>
            Text versions of the various trace levels.
            </summary>
        </member>
        <member name="M:TiGra.Diagnostics.#ctor">
            <summary>
            Construct and initialise diagnostics.
            </summary>
        </member>
        <member name="M:TiGra.Diagnostics.GetInstance">
            <summary>
            Gets a reference to the one and only instance of this singleton class.
            </summary>
            <returns>a reference to the one and only instance of this singleton class.</returns>
        </member>
        <member name="M:TiGra.Diagnostics.TraceError(System.Object)">
            <summary>
            Send an object to the trace channel at severity level Error.
            </summary>
            <param name="msg">The object (which may be a string) to display.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceError(System.String,System.Object[])">
            <summary>
            Format and send a list of objects to the trace channel at severity level Error.
            </summary>
            <param name="format">Format string used to format the objects.</param>
            <param name="items">List of objects to be displayed.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceWarning(System.Object)">
            <summary>
            Send an object to the trace channel at severity level Warning.
            </summary>
            <param name="msg">The object (which may be a string) to display.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceWarning(System.String,System.Object[])">
            <summary>
            Format and send a list of objects to the trace channel at severity level Warning.
            </summary>
            <param name="format">Format string used to format the objects.</param>
            <param name="items">List of objects to be displayed.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceInfo(System.Object)">
            <summary>
            Send an object to the trace channel at severity level Information.
            </summary>
            <param name="msg">The object (which may be a string) to display.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceInfo(System.String,System.Object[])">
            <summary>
            Format and send a list of objects to the trace channel at severity level Information.
            </summary>
            <param name="format">Format string used to format the objects.</param>
            <param name="items">List of objects to be displayed.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceVerbose(System.Object)">
            <summary>
            Send an object to the trace channel at severity level Verbose Information.
            </summary>
            <param name="msg">The object (which may be a string) to display.</param>
        </member>
        <member name="M:TiGra.Diagnostics.TraceVerbose(System.String,System.Object[])">
            <summary>
            Format and send a list of objects to the trace channel at severity level Verbose Information.
            </summary>
            <param name="format">Format string used to format the objects.</param>
            <param name="items">List of objects to be displayed.</param>
        </member>
        <member name="M:TiGra.Diagnostics.ExpandASCII(System.String)">
            <summary>
            Utility function. Expands non-printable ASCII characters into mnemonic human-readable form.
            </summary>
            <returns>
            Returns a new string with non-printing characters replaced by human-readable mnemonics.
            </returns>
        </member>
        <member name="T:TiGra.ASCII">
            <summary>
            RawWord type with enumeration constants for ASCII control codes.
            </summary>
        </member>
        <member name="T:ASCOM.SettingsProvider">
            <summary>
            Provides settings storage for ASCOM device drivers.
            Settings are persisted in the ASCOM Device Profile store.
            </summary>
            <remarks>
            Original version by Tim Long, March 2009.
            Copyright Â© 2009 TiGra Astronomy, all rights reserved.
            http://www.tigranetworks.co.uk/Astronomy
            </remarks>
        </member>
        <member name="F:ASCOM.SettingsProvider.appName">
            <summary>
            Backing store for the ApplicationName property.
            </summary>
        </member>
        <member name="M:ASCOM.SettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the ASCOM Settings Provider.
            </summary>
            <param name="name">Ignored.</param>
            <param name="config">Not used.</param>
            <remarks>
            The value of <see cref="P:ASCOM.SettingsProvider.ApplicationName"/> is determined here by reflection. This value
            should correspond to an ASCOM DeviceID and this is passed to the underlying
            ASCOM Helper assembly when reading and writing settings values.	Determining the correct
            value for <see cref="P:ASCOM.SettingsProvider.ApplicationName"/> is a tricky procedure as there is a very loose
            coupling between the settings class and the settings provider.   The way we discover
            the correct value is to walk up the call stack until we find an assembly name
            beginning with "ASCOM.".
            </remarks>
        </member>
        <member name="M:ASCOM.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Retrieves a collection of settings values from the underlying ASCOM Profile store.
            </summary>
            <param name="context">Not used.</param>
            <param name="collection">The list of properties to be retrieved.</param>
            <returns>
            Returns a collection of the retrieved property values as a
            <see cref="T:System.Configuration.SettingsPropertyValueCollection"/>.
            </returns>
            <remarks>
            If any properties are absent in the underlying store, or if an error occurs while
            retrieving them, then the property's default value is used.
            </remarks>
        </member>
        <member name="M:ASCOM.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            Persists a collection of settings values to the underlying ASCOM Profile store.
            </summary>
            <param name="context"></param>
            <param name="collection"></param>
        </member>
        <member name="M:ASCOM.SettingsProvider.EnsureRegistered(ASCOM.Utilities.Profile,System.String)">
            <summary>
            Checks whether the driver is registered with ASCOM and, if not, registers it.
            </summary>
            <param name="ascomProfile">
            A reference to a <see cref="T:ASCOM.Utilities.Profile"/> object
            that is used to query the ASCOM Device Profile.
            </param>
            <param name="DriverID">The full ASCOM DeviceID to be verified.</param>
        </member>
        <member name="P:ASCOM.SettingsProvider.Name">
            <summary>
            Returns the provider's friendly name used during configuration.
            </summary>
        </member>
        <member name="P:ASCOM.SettingsProvider.Description">
            <summary>
            Gets the provider's friendly description.
            </summary>
        </member>
        <member name="P:ASCOM.SettingsProvider.ApplicationName">
            <summary>
            Gets the name of the driver or application for which settings are being managed.
            This value is set during provider initialization and cannot be changed thereafter.
            </summary>
        </member>
    </members>
</doc>
