<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- #BeginTemplate "/Templates/Fixed_Fluid.dwt" --><!-- DW6 -->
 
<head><!-- #BeginEditable "Title" -->
<title>
Early and Late Binding</title>
<style type="text/css">
<!--
.style1 {	text-align: left;
}
-->
</style>
<!-- #EndEditable -->

<link rel="stylesheet" type="text/css" href="../Styles/Fixed_Fluid.css" />

<script type="text/javascript" language="javascript" src="../jscripts/Navigation.js"></script>

</head>
 
<body>

<div id="banner">
	<img style="position: absolute; top: 20px; left: 20px;" alt="ASCOM Standards for Astronomy" src="../Images/ASCOM-Logo.jpg" />
	
	<div id="breadcrumbs">
	<script type="text/javascript" language="javascript">
	<!-- 
	breadcrumbs(); 
	-->
	</script>
</div>

	<div class="topmenucontainer">
    <script type="text/javascript" language="javascript">
      <!-- 
	        writemainmenu();
	        -->
    </script>
  </div>
</div>



<div id="leftcontent">


	<div class="LeftNav">
	<div class="center"><div class="north"><div class="south">
	<script type="text/javascript" language="javascript">
	<!-- 
	writesubmenu(); 
	-->
	</script>
	
	</div></div></div></div>

	<!-- #BeginEditable "LeftNav" -->	<!-- #EndEditable --></div>
<div id="centercontent">
	<!-- #BeginEditable "MainContent" -->
	<div class="article">
	<h3>Early and Late Binding</h3>
	
	<p>ASCOM drivers are Windows Object/COM/ActiveX object servers. They use the Windows component object support that is built into all versions of the Windows OS. Drivers expose the standard set of properties and methods ('members&quot;) as defined by the relevant ASCOM interface specification. Client software creates an instance of the driver via an OS call, then calls its members to effect control of the device. </p>
	<p>There are two ways to access the members of a COM object: early and late binding. Early binding establishes a low-overhead binary linkage between the client program and the driver by compiling the member entry points and parameter signatures into the client software. Late binding uses the operating system to translate names and paremeter lists <i>at run time </i> into calls to the driver's members. This has higher overhead but allows each driver to have its own binary interface structure and eliminates driver-specific binary code from being compiled into the client software. It's beyond the scope of this article to describe these mechanisms in more detail, please refer to the COM documentation available on the net. </p>
	<h3>Master Interfaces and Binding</h3>
	<p>Starting with Platform 2008, master interfaces are installed in a registered COM type library and a .NET 
		primary interop assembly (in the GAC). 
		There are several purposes for including these interfaces:</p>
	<ol>
		<li>Make it easier for client developers to use drivers by eliminating 
			the complexities of reflection and late binding.</li>
		<li>Provide automatic enforcement of standards compliance to driver 
			writers, helping them to ensure their drivers really implement the 
			standards.</li>
		<li>Provide development environment assistance to both client and driver 
			writers via interface implementation tools and IntelliSense or the 
			equivalent in their IDE.</li>
	</ol>
	<p class="style1">Today's drivers were developed according to the original 
		ASCOM late-binding rule, so they each define their own interfaces that <i>should </i>		 contain all of the members (properties and methods) specified in 
		the standard. Clients cannot bind to these per-driver interfaces as they are 
		unique to each driver. Instead, they are required to reflect (inspect at run 
		time) on the drivers' interface members, knowing only the member name, then 
		invoking the member via a generic function. This is called late-binding. 
		At the time of inception of ASCOM, this made perfect sense, as it kept 
		the association between clients and drivers loose.</p>
	<p>It is now a goal of ASCOM to have drivers not only support late binding, 
		but also expose master <i>abstract </i> interface for the 
		driver type to permit interface-based early-binding. This is 
		possible in most languages and development systems including VB6 (the 
		technique was not evident until recently). It is beyond the scope of this 
		article to explain interface-based programming or the techniques for 
		exposing a master interface in all of the various programming languages and 
		systems that support COM. Rather, it provides reference information for the 
		most common languages that will permit the programmer to reference the 
		correct items in their development environment. Here is a table of the 
		interface names and the standards they represent (links will download the spec document).</p>
	<table align="center" cellpadding="5">
		<tr>
			<td><tt>ICamera </tt></td>
			<td><a href="http://download.ascom-standards.org/docs/Camera.zip">ASCOM Camera Interface V1.0</a></td>
		</tr>
		<tr>
			<td><tt>IDome </tt></td>
			<td><a href="http://download.ascom-standards.org/docs/Dome.zip">ASCOM Dome Interface 1.0</a></td>
		</tr>
		<tr>
			<td><tt>IFilterWheel </tt></td>
			<td><a href="http://download.ascom-standards.org/docs/FilterWheel.zip">ASCOM FilterWheel Interface 1.0</a></td>
		</tr>
		<tr>
			<td><tt>IFocuser </tt></td>
			<td><a href="http://download.ascom-standards.org/docs/Focuser.zip">ASCOM Focuser Interface 1.0</a></td>
		</tr>
		<tr>
			<td><tt>IRotator </tt></td>
			<td><a href="http://download.ascom-standards.org/docs/Rotator.zip">ASCOM Rotator Interface 1.0</a></td>
		</tr>
		<tr>
			<td><tt>ITelescope </tt></td>
			<td><a href="http://download.ascom-standards.org/docs/Telescope2.zip">ASCOM Telescope Interface 2.0</a></td>
		</tr>
	</table>
	<p style="margin-left: 20px; margin-right: 20px;"><img src="../Images/tip.gif" alt="Note" width="23" height="32" hspace="6" align="left" />The 
		.NET templates provided in the Platform developer content already have the 
		correct references set. <br />
		&nbsp;</p>
	<h3>Master Type Library for COM</h3>
	<p>For VB6, Delphi, and C++/ATL, a registered <span class="underline">master type library</span> is provided. Its name is 
		AscomMasterInterfaces.tlb. It appears in the&nbsp; OLEView type library tree 
		and the VB6 References selector list as &quot;ASCOM Master Interfaces for .NET 
		and COM (V1.0)&quot;. Any time you are writing a new driver or converting an 
		existing one to dual early/late binding, this is the reference to use for 
		the interfaces.</p>
	<p>You may notice the two Helper type libraries while viewing in OLEView or 
		the VB6 references list. Ignore these, they are used by the .NET reference 
		assemblies (see the next section). Instead, reference Helper and Heper2 
		directly. They have always supported early/late binding.</p>
	<h3>Master Interface Assembly for .NET</h3>
	<p>For .NET, a registered master primary interop assembly (PIA) is provided. 
		It appears in the .NET References window, COM tab, as &quot;ASCOM Master 
		Interfaces for .NET and COM (V1.0)&quot; (the same friendly name as seen in COM 
		from OLEView etc.). Once referenced in a .NET project, it will show as 
		ASCOM.Interfaces, the namespace containing the interfaces (e.g. 
		ASCOM.Interface.ITelescope). </p>
	<h3>Helper Interface Assemblies for .NET </h3>
	<p>In addition, for .NET, two additional PIAs are provided for the Helper and Helper2 
		components. They appear in the .NET references window, COM tab, as &quot;ASCOM 
		Helper Interfaces for .NET (V1.0)&quot; and &quot;ASCOM Helper2 interfaces for .NET 
		(V1.0)&quot;. They are provided because setting a reference directly to Helper or 
		Helper2 causes two more references (IScriptingSafety and ScriptingRuntime) 
		to be needlessly dragged into the projects that use these components. 
		Neither are used in the .NET environment.</p>
	</div>
	<!-- #EndEditable --></div>
<div id="footer">
	Copyright © 1998-2010, The ASCOM Initiative. 
	All rights reserved. </div>

</body>

<!-- #EndTemplate --></html>
