<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><!-- #BeginTemplate "/Templates/Fixed_Fluid.dwt" --><!-- DW6 -->
 
<head><!-- #BeginEditable "Title" -->
<title>Projects in Progress</title><!-- #EndEditable -->

<link rel="stylesheet" type="text/css" href="../Styles/Fixed_Fluid.css" />

<script type="text/javascript" language="javascript" src="../jscripts/Navigation.js"></script>

</head>
 
<body>

<div id="banner">
	<img style="position: absolute; top: 20px; left: 20px;" alt="ASCOM Standards for Astronomy" src="../Images/ASCOM-Logo.jpg" />
	
	<div id="breadcrumbs">
	<script type="text/javascript" language="javascript">
	<!-- 
	breadcrumbs(); 
	-->
	</script>
</div>

	<div class="topmenucontainer">
    <script type="text/javascript" language="javascript">
      <!-- 
	        writemainmenu();
	        -->
    </script>
  </div>
</div>



<div id="leftcontent">


	<div class="LeftNav">
	<div class="center"><div class="north"><div class="south">
	<script type="text/javascript" language="javascript">
	<!-- 
	writesubmenu(); 
	-->
	</script>
	
	</div></div></div></div>

	<!-- #BeginEditable "LeftNav" -->	<!-- #EndEditable --></div>
<div id="centercontent">
	<!-- #BeginEditable "MainContent" -->
	<div class="article">
		<h3>Projects in Progress</h3>
		<h4>ASCOM Platform 5.5</h4>
		<p>This <em>very</em> active project is nearing completion (as of Sept 2009). This release of the Platform replaces the support components used by drivers with new technology based on .NET. <span class="underline">This will not break any existing drivers!</span> The settings used by drivers will be automatically moved from the registry to data files, avoiding permission and security problems that appeared with Vista and 64-bit systems. Also, the driver-support serial communications  has been upgraded for better support of USB to serial converters and greater reliability. The new support components are accessible via both .NET and COM. These improvements will be <span class="underline">immediately available to existing drivers</span>, as they are all compatible with the current support components. </p>
		<p>Besides these support improvements, new components have been added to the Platform in support of future drivers and astronomy applications. The venerable NOVAS and Kepler components have been rewritten in .NET and support richer interfaces for both .NET and COM. These new components will run side-by-side with the original ones, avoiding problems for existing programs which early bind to them. </p>
		<p>Platform 5.5 also marks the change to the <a href="../Community/Index.htm#opnsrc">open source development model</a>, with a team of people working via a subversion repository. Weekly automated builds are being done, and the core team is meeting weekly via LiveMeeting to discuss issues and resolve problems. </p>
		<h4>ASCOM Platform 6.0</h4>
		<p>The next generation of the ASCOM Platform is aimed at adding standard interfaces for new device types, and even more support for both drivers and astronomy applications. It will contain all new simulators, updated Visual Studio driver templates, a new settings provider for Visual Studio integraton of settings, the Multi-Port Selector interface (with a new template), and more. This &quot;mother of all projects in progress&quot; project is underway with several people working on it, and is expected to be out in beta late this year or early next year. </p>
		<h4>New Gemini Driver</h4>
		<p>The popular Losmandy Gemini telescope controller will soon have a brand new driver, written in .NET by an expert team of developers. Gemini developer Ren&eacute; G&ouml;rlich is part of the team, giving the team access to the  firmware developer for the first time. The project is very active at this time (Sept 2009) and is expected to complete in the coming months. This new driver will give Gemini users a first-class driver for all of the programs that use ASCOM for telescope control.</p>
		<h4>New Astro-Physics Driver</h4>
		<p>Astro-Physics, Inc. has assumed responsibility for the driver for its line of telescope mounts. They have commissioned the development of a new factory-supported driver that will be included with every new mount, and be made available to existing Astro-Physics mount owners. </p>
		<h4>Multi-Port Selector Interface</h4>
		<p>Optec, Inc. has assumed responsibility for the drivers for all of their astronomical instruments, including their upcoming new multi-port instrument selector. This device will allow computer-controlled switching between instrumentation packages. As part of this effort, they are developing a new driver and defining what will eventually become a standard interface to such devices. After they have a working system, their interface will be submitted for approval as an ASCOM standard. This is hoped to be included in the ASCOM Platform 6.0.</p>
		
		<h4>Weather Safety Interface</h4>
		<p>With the variety of weather stations out there, and their different interfaces, it seems natural that astronomy applications should have the benefit of a driver layer to make  weather safety information available without coding for every station out there. This project has become active, with Matt Thomas leading the way with an interface proposal. The present effort is aimed at providing safe/unsafe and basic sky condition inputs. Providing detailed meteorological information will be a separate project, as this is much more complex, and is not needed in support of active observing.</p>
		<h4>Switch Interface    </h4>
		<p>This driver interface provides device-independent access to switch closures. There are many types of electrical switch systems that can be controlled by computers, and they interface through a variety of hardware connections (serial link, ethernet, USB). Astronomy applications often to need to control power and other things via computer-controlled switches. A switch interface was proposed a few years ago, and a Switch simulator is included with the current ASCOM Platform. The interface was never formally adopted, it was recently decided to drop the existing Switch interface, which uses arrays in its interface, in favor of a new interface which uses a collection of Switch objects. This interface architecture is much more in line with modern practices. Expect this (and a new simulator) to appear in ASCOM Platform 6.</p>
		<h4>ASCOM-X</h4>
		<p>ASCOM should be cross-platform rather than just for Windows. Drivers with the current standard API's should be available to programs on the Mac and on Linux. Clearly, the same driver can't run on all three platforms. But the driver-client model can be implemented on the other platforms, including the current ASCOM standard driver API's. The problem is daunting, though, because any driver layer on those platforms really should be <span class="underline">language-independent</span> as it is on Windows. How do you make a driver layer language-independent on Mac and Linux? This is being discussed on a separate Yahoo! Group <a href="http://groups.yahoo.com/group/ASCOM-Cross/" target="aux">ASCOM-Cross</a>. </p>
		</div>
	<!-- #EndEditable --></div>
<div id="footer">
	Copyright © 1998-2010, The ASCOM Initiative. 
	All rights reserved. </div>

</body>

<!-- #EndTemplate --></html>
